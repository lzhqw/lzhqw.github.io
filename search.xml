<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo+github pages部署个人博客</title>
      <link href="/2023/12/19/%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BAblog/"/>
      <url>/2023/12/19/%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BAblog/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-github-pages部署个人博客"><a href="#Hexo-github-pages部署个人博客" class="headerlink" title="Hexo+github pages部署个人博客"></a>Hexo+github pages部署个人博客</h1><p>参考：</p><blockquote><p><a href="https://www.fomal.cc/posts/e593433d.html">Hexo博客搭建基础教程(一) | Fomalhaut🥝</a></p><p><a href="https://www.fomal.cc/posts/4aa2d85f.html#5-%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95%E8%AF%B4%E6%98%8E">Hexo博客搭建基础教程(二) | Fomalhaut🥝</a></p><p><a href="https://butterfly.js.org/posts/ceeb73f/#%E7%BE%8E%E5%8C%96-%E7%89%B9%E6%95%88">Butterfly 安裝文檔(四) 主題配置-2 | Butterfly</a></p></blockquote><h2 id="step1-安装Node-js和npm"><a href="#step1-安装Node-js和npm" class="headerlink" title="step1. 安装Node.js和npm"></a>step1. 安装Node.js和npm</h2><ul><li><p>访问 <a href="https://nodejs.org/">Node.js 官网</a> 下载Node.js</p></li><li><p>安装完成后，可以在命令行中输入以下命令来验证安装</p></li><li><pre><code class="bash">node -vnpm -v<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## step2. Hexo的安装与初始化</span><br><span class="line"></span><br><span class="line">### 安装</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></code></pre></li></ul><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> BlogRoot</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="在本地运行Hexo服务器"><a href="#在本地运行Hexo服务器" class="headerlink" title="在本地运行Hexo服务器"></a>在本地运行Hexo服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><h2 id="step3-部署到github-pages上"><a href="#step3-部署到github-pages上" class="headerlink" title="step3. 部署到github pages上"></a>step3. 部署到github pages上</h2><ol><li><p>创建一个github仓库，名称必须为<code>&lt;username&gt;.github.io</code></p></li><li><p>创建ssh密钥，一路回车</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C <span class="string">&quot;your_email@example.com&quot;</span></span><br></pre></td></tr></table></figure><p> 在users&#x2F;username&#x2F;.ssh中可以看到生成的密钥文件，其中以<code>.pub</code>为结尾的是公钥。在github的<code>settings &gt; SSH and GPG keys</code>的<code>SSH keys</code>中点击<code>New SSH key</code>，复制公钥并添加。</p><p> 检测是否能与github正常通信：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></li><li><p>在<code>BlogRoot/_config.yml</code>中设置deploy选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: git@github.com:&lt;repository git&gt;</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><ol start="4"><li>部署</li></ol> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure></li></ol><h2 id="step4-基于butterfly设置blog样式"><a href="#step4-基于butterfly设置blog样式" class="headerlink" title="step4. 基于butterfly设置blog样式"></a>step4. 基于butterfly设置blog样式</h2><h3 id="butterfly-安装"><a href="#butterfly-安装" class="headerlink" title="butterfly 安装"></a>butterfly 安装</h3><ol><li><p>在<code>BlogRoot</code>目录下下载butterfly</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure></li><li><p>安装主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure></li><li><p>安装hexo渲染插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure></li><li><p>在<code>_config.yml</code>中将<code>theme</code>的值更改为butterfly</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure></li></ol><h3 id="butterfly设置"><a href="#butterfly设置" class="headerlink" title="butterfly设置"></a>butterfly设置</h3><ol><li><p>标签页</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>该指令会在<code>BlogRoot/source</code>下生成一个含有<code>index.md</code>文件的<code>tags</code>文件夹。进入<code>index.md</code>并添加<code>type: &quot;tags&quot;</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-10-28 12:00:00</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li><li><p>404页面</p><p>将false改为true</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A simple 404 page</span></span><br><span class="line"><span class="attr">error_404:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">subtitle:</span> <span class="string">&#x27;Page Not Found&#x27;</span></span><br><span class="line">  <span class="attr">background:</span> <span class="string">https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="butterfly主题设置"><a href="#butterfly主题设置" class="headerlink" title="butterfly主题设置"></a>butterfly主题设置</h3><h4 id="menu"><a href="#menu" class="headerlink" title="menu"></a>menu</h4><p>在这里可以修改menu界面，冒号前为显示的名称，冒号后为文件夹名称，注意要通过<code>hexo new page &lt;文件夹名称&gt;</code>来创建文件夹</p><p><img src="/../imgs/butterfly%20menu.png" alt="butterfly-menu"></p><h4 id="代码风格"><a href="#代码风格" class="headerlink" title="代码风格"></a>代码风格</h4><p><img src="/../imgs/butterfly%20code%20block.png" alt="butterfly code block"></p><h4 id="社交信息"><a href="#社交信息" class="headerlink" title="社交信息"></a>社交信息</h4><p>可以放一些github和email之类的</p><p><img src="/../imgs/butterfly-social%20settings.png" alt="butterfly-social settings"></p><h4 id="网站图标"><a href="#网站图标" class="headerlink" title="网站图标"></a>网站图标</h4><p><img src="/../imgs/butterfly-Favicon.png" alt="butterfly-Favicon"></p><p><img src="/../imgs/butterfly%20favicon.png" alt="butterfly-favicon"></p><p>将图片添加至<code>BlogRoot/themes/butterfly/source/img</code>，并修改图片地址</p><h4 id="头像、横幅、页面图标"><a href="#头像、横幅、页面图标" class="headerlink" title="头像、横幅、页面图标"></a>头像、横幅、页面图标</h4><p><img src="/../imgs/butterfly%20img.png" alt="butterfly img"></p><h4 id="搜索栏"><a href="#搜索栏" class="headerlink" title="搜索栏"></a>搜索栏</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>在<code>BlogRoot/_config.yml</code>中添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="/../imgs/butterfly%20search.png" alt="butterfly-search"></p><p>将<code>enable</code>和<code>preload</code>改为true</p><h4 id="cover"><a href="#cover" class="headerlink" title="cover"></a>cover</h4><p>文章封面，需要在文章开头的yml中添加<code>cover</code>才会生效，但个设置多个<code>default_cover</code>时，会选一个展示</p><p><img src="/../imgs/butterfly-cover.png" alt="butterfly-cover"></p><h4 id="post"><a href="#post" class="headerlink" title="post"></a>post</h4><p>如何显示时间，是否显示标签等</p><p><img src="/../imgs/butterfly-post.png" alt="butterfly-post"></p><h4 id="wordcount"><a href="#wordcount" class="headerlink" title="wordcount"></a>wordcount</h4><p>安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>将wordcount的<code>enable</code>改为<code>true</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="文章过期提醒"><a href="#文章过期提醒" class="headerlink" title="文章过期提醒"></a>文章过期提醒</h4><p><img src="/../imgs/butterfly-outdated.png" alt="butterfly-outdated"></p><h4 id="自定义颜色"><a href="#自定义颜色" class="headerlink" title="自定义颜色"></a>自定义颜色</h4><p><img src="/../imgs/butterfly-color.png" alt="butterfly-color"></p><h4 id="background"><a href="#background" class="headerlink" title="background"></a>background</h4><p>当使用本地图片时，填img开始的相对路径，注意img前要加斜杠</p><p><img src="/../imgs/butterfly-background.png" alt="butterfly-background"></p><h4 id="侧边栏相关配置"><a href="#侧边栏相关配置" class="headerlink" title="侧边栏相关配置"></a>侧边栏相关配置</h4><p><img src="/../imgs/butterfly-aside.png" alt="butterfly-aside"></p>]]></content>
      
      
      <categories>
          
          <category> web技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> hexo </tag>
            
            <tag> github pages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速入门：如何在Linux服务器上跑爬虫</title>
      <link href="/2023/12/19/%E5%9C%A8linux%E4%B8%AD%E5%AE%89%E8%A3%85mongodb/"/>
      <url>/2023/12/19/%E5%9C%A8linux%E4%B8%AD%E5%AE%89%E8%A3%85mongodb/</url>
      
        <content type="html"><![CDATA[<h1 id="快速入门：如何在Linux服务器上跑爬虫"><a href="#快速入门：如何在Linux服务器上跑爬虫" class="headerlink" title="快速入门：如何在Linux服务器上跑爬虫"></a>快速入门：如何在Linux服务器上跑爬虫</h1><h2 id="服务器准备工作"><a href="#服务器准备工作" class="headerlink" title="服务器准备工作"></a>服务器准备工作</h2><h3 id="购买一个服务器实例"><a href="#购买一个服务器实例" class="headerlink" title="购买一个服务器实例"></a>购买一个服务器实例</h3><p>以阿里云为例，阿里云现在有学生优惠，可以在以下链接领取：<a href="https://university.aliyun.com/">https://university.aliyun.com/</a></p><p>然后租一个2核2G的服务器，仅需285元，优惠下来只需0元即可租一年。</p><p><img src="/../imgs/%E9%98%BF%E9%87%8C%E4%BA%91-%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B4%AD%E4%B9%B0%E7%95%8C%E9%9D%A2.png" alt="image-20231218143552296"></p><h3 id="绑定弹性网卡"><a href="#绑定弹性网卡" class="headerlink" title="绑定弹性网卡"></a>绑定弹性网卡</h3><p>绑定弹性网卡的功能：</p><ol><li>绑定弹性网卡以访问外网</li><li>获得公网ip，从而可以ssh访问</li></ol><p>弹性网卡概述：<a href="https://help.aliyun.com/zh/ecs/user-guide/overview-48">弹性网卡概述_云服务器 ECS(ECS)-阿里云帮助中心 (aliyun.com)</a></p><p>如何创建弹性网卡：<a href="https://help.aliyun.com/zh/ecs/user-guide/create-an-eni">如何创建弹性网卡_云服务器 ECS(ECS)-阿里云帮助中心 (aliyun.com)</a></p><p><img src="/../imgs/%E9%98%BF%E9%87%8C%E4%BA%91-%E5%BC%B9%E6%80%A7%E7%BD%91%E5%8D%A1.png" alt="image-20231218144744091"></p><h3 id="设置安全组"><a href="#设置安全组" class="headerlink" title="设置安全组"></a>设置安全组</h3><p>服务器设有防火墙，如果需要从本地访问服务器的MongoDB，则会被服务器的防火墙阻拦，因此需要设置安全组，允许访问27017端口。</p><p><img src="/../imgs/%E9%98%BF%E9%87%8C%E4%BA%91-%E5%AE%89%E5%85%A8%E7%BB%84.png" alt="1702882441840"></p><p>安全组概述：<a href="https://help.aliyun.com/zh/ecs/user-guide/overview-44">什么是安全组_云服务器 ECS(ECS)-阿里云帮助中心 (aliyun.com)</a></p><p>设置安全组：<a href="https://help.aliyun.com/zh/ecs/user-guide/create-a-security-group-1">如何创建一个安全组并设置安全组规则_云服务器 ECS(ECS)-阿里云帮助中心 (aliyun.com)</a></p><h2 id="配置MongoDB"><a href="#配置MongoDB" class="headerlink" title="配置MongoDB"></a>配置MongoDB</h2><h3 id="安装MongoDB"><a href="#安装MongoDB" class="headerlink" title="安装MongoDB"></a>安装MongoDB</h3><p><a href="https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/">在 Ubuntu 上安装 MongoDB Community Edition — MongoDB 手册</a></p><p>主要参照MongoDB手册，为了阅读方便，将关键内容摘抄如下：</p><h4 id="1-导入MongoDB的public-key"><a href="#1-导入MongoDB的public-key" class="headerlink" title="1. 导入MongoDB的public key"></a>1. 导入MongoDB的public key</h4><p>安装<code>gnupg</code>和<code>curl</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gnupg curl</span><br></pre></td></tr></table></figure><p>导入 MongoDB public GPG key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://pgp.mongodb.com/server-7.0.asc | \</span><br><span class="line">   sudo gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg \</span><br><span class="line">   --dearmor</span><br></pre></td></tr></table></figure><p>创建MongoDB的列表文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/mongodb-org-7.0.list</span><br></pre></td></tr></table></figure><p>更新软件包列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>安装最新的稳定版的MongoDB</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y mongodb-org</span><br></pre></td></tr></table></figure><p>在systemd下启动MongoDB</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start mongod</span><br></pre></td></tr></table></figure><h3 id="创建管理员"><a href="#创建管理员" class="headerlink" title="创建管理员"></a>创建管理员</h3><p>为了防止被攻击，需要设定管理员角色，这样的话访问MongoDB需要账户密码。</p><h4 id="1-启用访问控制"><a href="#1-启用访问控制" class="headerlink" title="1. 启用访问控制"></a>1. 启用访问控制</h4><p>编辑 MongoDB 的配置文件（通常是 <code>etc/mongod.conf</code>），以启用访问控制。在配置文件中添加或更新以下行：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">security:</span></span><br><span class="line">  <span class="attr">authorization:</span> <span class="string">enabled</span></span><br></pre></td></tr></table></figure><p>这将启用用户认证。</p><blockquote><p>一般情况下服务器进去默认在root，etc和root在同一级文件夹中，访问etc需要先到上一级文件夹再访问</p></blockquote><h4 id="2-重启-MongoDB-服务"><a href="#2-重启-MongoDB-服务" class="headerlink" title="2. 重启 MongoDB 服务"></a>2. 重启 MongoDB 服务</h4><p>更改配置后，需要重启 MongoDB 服务以应用更改。这通常可以通过以下命令完成（systemd系统下）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart mongod</span><br></pre></td></tr></table></figure><h4 id="3-连接到-MongoDB-Shell"><a href="#3-连接到-MongoDB-Shell" class="headerlink" title="3. 连接到 MongoDB Shell"></a>3. 连接到 MongoDB Shell</h4><p>使用 MongoDB Shell 连接到数据库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongosh</span><br></pre></td></tr></table></figure><h4 id="4-创建管理员用户"><a href="#4-创建管理员用户" class="headerlink" title="4. 创建管理员用户"></a>4. 创建管理员用户</h4><p>首先，您需要创建一个具有管理员权限的用户。在 MongoDB Shell 中，切换到 <code>admin</code> 数据库并创建一个新用户：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br><span class="line">db.<span class="title function_">createUser</span>(&#123;</span><br><span class="line">  <span class="attr">user</span>: <span class="string">&quot;lzh&quot;</span>,</span><br><span class="line">  <span class="attr">pwd</span>: <span class="string">&quot;lzhinxjtu@2020&quot;</span>,</span><br><span class="line">  <span class="attr">roles</span>: [&#123; <span class="attr">role</span>: <span class="string">&quot;userAdminAnyDatabase&quot;</span>, <span class="attr">db</span>: <span class="string">&quot;admin&quot;</span> &#125;]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>将 <code>&quot;myAdmin&quot;</code> 和 <code>&quot;adminPassword&quot;</code> 替换为您想要的用户名和密码。</p><h4 id="5-退出并以管理员身份重新登录"><a href="#5-退出并以管理员身份重新登录" class="headerlink" title="5. 退出并以管理员身份重新登录"></a>5. 退出并以管理员身份重新登录</h4><p>退出 MongoDB Shell（使用 <code>exit</code> 命令），然后使用您刚创建的管理员账户重新登录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongosh -u lzh -p lzhinxjtu@2020 --authenticationDatabase admin</span><br></pre></td></tr></table></figure><h2 id="tmux"><a href="#tmux" class="headerlink" title="tmux"></a>tmux</h2><p><a href="https://blog.csdn.net/Naisu_kun/article/details/119567566">Linux笔记：终端复用与管理工具screen和tmux_tmux和screen-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> web技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> mongodb </tag>
            
            <tag> tmux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
